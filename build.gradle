buildscript {
    ext {
        depManagementVersion = "1.0.10.RELEASE"
        springBootVersion = '2.3.5.RELEASE'
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:${depManagementVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "com.ewerk.gradle.plugins.querydsl"

    group = 'com.ugly'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '8'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone/" }
        jcenter()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'cglib:cglib-nodep:3.2.10'
        testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
        testImplementation 'org.spockframework:spock-spring:1.2-groovy-2.5'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        compile("org.jsoup:jsoup:1.11.3")
    }
}

project(':api'){
    bootJar{ enabled = true }
    jar {enabled = false }

    dependencies{
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        compile 'com.h2database:h2'
        compile 'com.querydsl:querydsl-jpa'
        compile 'com.querydsl:querydsl-apt'

        compile "io.springfox:springfox-swagger2:2.9.2"
        compile "io.springfox:springfox-swagger-ui:2.9.2"
    }

    apply plugin: "com.ewerk.gradle.plugins.querydsl"
    def querydslSrcDir = 'src/main/querydsl'

    querydsl {
        library = "com.querydsl:querydsl-apt"
        jpa = true
        querydslSourcesDir = querydslSrcDir
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', querydslSrcDir]
            }
        }
    }

    compileQuerydsl{
        options.annotationProcessorPath = configurations.querydsl
    }

    configurations {
        querydsl.extendsFrom compileClasspath
    }
}